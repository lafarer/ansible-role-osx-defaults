---
- block:
  - name: "Finder - General - Show Hard Disks On The Desktop"
    osx_defaults: { domain: 'com.apple.finder', key: "{{ item.key }}", type: "{{ item.type }}", value: "{{ item.value }}" }
    loop:
      - { key: 'ShowHardDrivesOnDesktop',         type: 'bool',   value: '{{ Finder_ShowHardDrivesOnDesktop }}'}
      - { key: 'ShowExternalHardDrivesOnDesktop', type: 'bool',   value: '{{ Finder_ShowExternalHardDrivesOnDesktop }}'}
      - { key: 'ShowRemovableMediaOnDesktop',     type: 'bool',   value: '{{ Finder_ShowRemovableMediaOnDesktop }}'}
      - { key: 'ShowMountedServersOnDesktop',     type: 'bool',   value: '{{ Finder_ShowMountedServersOnDesktop }}'}
    when: item.value | string | length > 0
    notify: Restart Finder

  - name: "Finder - General - View Settings"
    osx_defaults: { domain: 'com.apple.finder', key: "{{ item.key }}", type: "{{ item.type }}", value: "{{ item.value  }}" }
    loop:
      - { key: 'FXPreferredViewStyle', type: 'string', value: '{{ Finder_FXPreferredViewStyle }}'}
      - { key: 'FXPreferredGroupBy',   type: 'string', value: '{{ Finder_FXPreferredGroupBy }}'}
      - { key: 'ShowTabView',          type: 'bool',   value: '{{ Finder_ShowTabView }}'}
      - { key: 'ShowPathbar',          type: 'bool',   value: '{{ Finder_ShowPathbar }}'}
      - { key: 'ShowStatusBar',        type: 'bool',   value: '{{ Finder_ShowStatusBar }}'}
      - { key: 'ShowSidebar',          type: 'bool',   value: '{{ Finder_ShowSidebar }}'}
      - { key: 'ColumnShowIcons',      type: 'bool',   value: '{{ Finder_ColumnShowIcons }}'}
    when: item.value | string | length > 0
    notify: Restart Finder

  - name: "Finder - General - New Windows Show"
    osx_defaults: { domain: 'com.apple.finder', key: 'NewWindowTargetPath', type: string, value: "{{ item.value }}" }
    loop: "{{ Finder_NewWindowsShow_Options }}"
    when: Finder_NewWindowTarget is defined and item.name == Finder_NewWindowTarget
    changed_when: no
    notify: Restart Finder

  - name: "Finder - Desktop - IconViewSettings"
    shell: |
      /usr/libexec/PlistBuddy -c "Delete {{ key_base }}{{ item.key }}" "{{ plist_file }}"
      /usr/libexec/PlistBuddy -c "Add {{ key_base }}{{ item.key }} {{ item.type }} {{ item.value }}" "{{ plist_file }}"
    loop:
      - { key: 'arrangeBy', type: 'string', value: '{{ Finder_DVSIVSarrangeBy }}' }
      - { key: 'iconSize', type: 'integer', value: '{{ Finder_DVSIVSiconSize }}' }
      - { key: 'showItemInfo', type: 'bool', value: '{{ Finder_DVSIVSshowItemInfo }}' }
      - { key: 'gridSpacing', type: 'integer', value: '{{ Finder_DVSIVSgridSpacing }}' }
      - { key: 'labelOnBottom', type: 'bool', value: '{{ Finder_DVSIVSlabelOnBottom }}' }
    vars:
      key_base: ':DesktopViewSettings:IconViewSettings:'
      plist_file: '~/Library/Preferences/com.apple.finder.plist'
    when: item.value | string | length > 0
    changed_when: no
    notify: Restart Finder
  # It is necessary to `Delete` then `Add` the IconView preferences because:
  # - if they are not existing it is not possible to use `Set` and is necessary to use `Add`
  # - if we use `Add` and the item already exists it throws an error
  - name: "Finder - Standard - IconViewSettings"
    shell: |
      /usr/libexec/PlistBuddy -c "Delete {{ key_base }}{{ item.key }}" "{{ plist_file }}"
      /usr/libexec/PlistBuddy -c "Add {{ key_base }}{{ item.key }} {{ item.type }} {{ item.value }}" "{{ plist_file }}"
    loop:
      - { key: 'arrangeBy', type: 'string', value: '{{ Finder_SVSIVSarrangeBy }}' }
      - { key: 'iconSize', type: 'integer', value: '{{ Finder_SVSIVSiconSize }}' }
      - { key: 'showItemInfo', type: 'bool', value: '{{ Finder_SVSIVSshowItemInfo }}' }
      - { key: 'gridSpacing', type: 'integer', value: '{{ Finder_SVSIVSgridSpacing }}' }
    vars:
      key_base: ':StandardViewSettings:IconViewSettings:'
      plist_file: '~/Library/Preferences/com.apple.finder.plist'
    when: item.value | string | length > 0 # item.value is used to verify that there's a value to replace the value in the following task
    changed_when: no
    notify: Restart Finder

  - name: "Finder - Advanced - Show All Filename Extensions"
    osx_defaults: { domain: 'NSGlobalDomain', key: 'AppleShowAllExtensions', type: bool, value: "{{ item }}" }
    loop:
      - "{{ Finder_AppleShowAllExtensions }}"
    when: Finder_AppleShowAllExtensions is defined
    notify: Restart Finder

  - name: "Finder - Advanced - Various"
    osx_defaults: { domain: 'com.apple.finder', key: "{{ item.key }}", type: "{{ item.type }}", value: "{{ item.value }}" }
    loop:
      - { key: 'FXEnableExtensionChangeWarning', type: 'bool',   value: '{{ Finder_FXEnableExtensionChangeWarning }}'}
      - { key: 'WarnOnEmptyTrash',               type: 'bool',   value: '{{ Finder_WarnOnEmptyTrash }}'}
      - { key: 'FXDefaultSearchScope',           type: 'string', value: '{{ Finder_FXDefaultSearchScope }}'}
      - { key: 'NewWindowTarget',                type: 'string', value: '{{ Finder_NewWindowTarget }}'}
      - { key: 'FinderSpawnTab',                 type: 'bool',   value: '{{ Finder_FinderSpawnTab }}'}
    when: item.value | string | length > 0
    notify: Restart Finder

  - name: "Finder - Extra - Various"
    osx_defaults: { domain: "{{ item.domain }}", key: "{{ item.key }}", type: "{{ item.type }}", value: "{{ item.value }}" }
    loop:
      - { domain: 'com.apple.finder', key: '_FXShowPosixPathInTitle', type: 'bool', value: '{{ Finder_FXShowPosixPathInTitle }}'}
      - { domain: 'com.apple.finder', key: 'AppleShowAllFiles',       type: 'string', value: '{{ Finder_AppleShowAllFiles }}'}
      - { domain: 'com.apple.finder', key: 'QLEnableTextSelection',   type: 'bool', value: '{{ Finder_QLEnableTextSelection }}'}
      - { domain: 'com.apple.finder', key: 'QuitMenuItem',            type: 'bool', value: '{{ Finder_QuitMenuItem }}'}
      - { domain: 'com.apple.desktopservices', key: 'DSDontWriteNetworkStores', type: 'bool', value: '{{ Finder_DSDontWriteNetworkStores }}'}
      - { domain: 'com.apple.desktopservices', key: 'DSDontWriteUSBStores', type: 'bool', value: '{{ Finder_DSDontWriteUSBStores }}'}
    when: item.value | string | length > 0
    notify: Restart Finder

  become: "{{ target_user_id != ansible_user_id }}"
  become_user: "{{ target_user_id }}"
